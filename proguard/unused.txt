javax.jmdns.JmDNS:
    41:41:public static javax.jmdns.JmDNS create(java.net.InetAddress)
    public abstract java.lang.String getHostName()
    public abstract java.net.InetAddress getInterface()
    public abstract javax.jmdns.ServiceInfo getServiceInfo(java.lang.String,java.lang.String,int)
    public abstract void requestServiceInfo(java.lang.String,java.lang.String)
    public abstract void addServiceTypeListener(javax.jmdns.ServiceTypeListener)
    public abstract void removeServiceTypeListener(javax.jmdns.ServiceTypeListener)
    public abstract void unregisterAllServices()
    public abstract void registerServiceType(java.lang.String)
    public abstract void printServices()
    public abstract javax.jmdns.ServiceInfo[] list(java.lang.String)
javax.jmdns.ServiceInfo:
    26:26:public static javax.jmdns.ServiceInfo create(java.lang.String,java.lang.String,int,java.lang.String)
    41:41:public static javax.jmdns.ServiceInfo create(java.lang.String,java.lang.String,int,int,int,java.lang.String)
    72:72:public static javax.jmdns.ServiceInfo create(java.lang.String,java.lang.String,int,int,int,byte[])
    public abstract java.lang.String getType()
    public abstract java.lang.String getName()
    public abstract java.lang.String getQualifiedName()
    public abstract java.net.InetAddress getAddress()
    public abstract java.net.InetAddress getInetAddress()
    public abstract int getPriority()
    public abstract int getWeight()
    public abstract byte[] getTextBytes()
    public abstract java.lang.String getTextString()
    public abstract java.lang.String getURL()
    public abstract java.lang.String getURL(java.lang.String)
    public abstract byte[] getPropertyBytes(java.lang.String)
    public abstract java.util.Enumeration getPropertyNames()
    public abstract java.lang.String getNiceTextString()
javax.jmdns.impl.DNSCache:
    200:205:public synchronized void print()
javax.jmdns.impl.DNSConstants
javax.jmdns.impl.DNSIncoming:
    189:189:boolean isResponse()
    297:352:java.lang.String print(boolean)
javax.jmdns.impl.DNSOutgoing:
    int len
    92:97:void addAdditionalAnswer(javax.jmdns.impl.DNSIncoming,javax.jmdns.impl.DNSRecord)
    148:152:void writeBytes(java.lang.String,int,int)
    156:160:void writeBytes(byte[])
javax.jmdns.impl.DNSRecord:
    abstract javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int,javax.jmdns.impl.DNSOutgoing)
    140:140:boolean isStale(long)
    627:628:public void setTtl(int)
javax.jmdns.impl.DNSRecord$Address:
    213:213:boolean same(javax.jmdns.impl.DNSRecord)
    325:325:javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int,javax.jmdns.impl.DNSOutgoing)
javax.jmdns.impl.DNSRecord$Pointer:
    377:377:javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int,javax.jmdns.impl.DNSOutgoing)
javax.jmdns.impl.DNSRecord$Service:
    597:605:javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int,javax.jmdns.impl.DNSOutgoing)
javax.jmdns.impl.DNSRecord$Text:
    436:436:javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int,javax.jmdns.impl.DNSOutgoing)
javax.jmdns.impl.JmDNSImpl:
    192:198:public JmDNSImpl(java.net.InetAddress)
    321:323:synchronized void cancel()
    344:344:public java.lang.String getHostName()
    397:398:public void requestServiceInfo(java.lang.String,java.lang.String)
    441:452:public void addServiceTypeListener(javax.jmdns.ServiceTypeListener)
    459:462:public void removeServiceTypeListener(javax.jmdns.ServiceTypeListener)
    995:997:void print()
    1005:1005:public void printServices()
    1057:1079:public javax.jmdns.ServiceInfo[] list(java.lang.String)
    1210:1211:public void setIoLock(java.lang.Object)
    1226:1227:void setLocalHost(javax.jmdns.impl.HostInfo)
    1238:1238:public boolean isClosed()
javax.jmdns.impl.JmDNSImpl$ServiceCollector:
    1110:1112:public JmDNSImpl$ServiceCollector(java.lang.String)
    1147:1149:public javax.jmdns.impl.ServiceInfoImpl[] list()
javax.jmdns.impl.ServiceInfoImpl:
    63:64:public ServiceInfoImpl(java.lang.String,java.lang.String,int,java.lang.String)
    71:85:public ServiceInfoImpl(java.lang.String,java.lang.String,int,int,int,java.lang.String)
    241:241:public java.net.InetAddress getInetAddress()
    273:273:public byte[] getTextBytes()
    281:285:public java.lang.String getTextString()
    293:293:public java.lang.String getURL()
    301:314:public java.lang.String getURL(java.lang.String)
    322:322:public synchronized byte[] getPropertyBytes(java.lang.String)
    347:348:public java.util.Enumeration getPropertyNames()
javax.jmdns.impl.tasks.Canceler:
    57:61:public Canceler(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.ServiceInfoImpl[],java.lang.Object)
javax.jmdns.impl.tasks.TypeResolver
org.tunesremote.ArtistsActivity:
    protected android.graphics.Bitmap blank
    194:196:protected char startsWith(int)
    205:235:public void scrollAlpha(char)
org.tunesremote.BackendService:
    public static final java.lang.String PREFS
    public static final java.lang.String PREF_LASTADDR
    public static final java.lang.String EXTRA_LIBRARY
    public static final java.lang.String EXTRA_ADDRESS
    public static final java.lang.String EXTRA_CODE
org.tunesremote.BaseBrowseActivity:
    public static final int RESULT_SWITCH_TO_ARTISTS
    public static final int RESULT_SWITCH_TO_PLAYLISTS
org.tunesremote.ControlActivity:
    public static final java.lang.String EULA
    public static final int VIBRATE_LEN
    public static final long CACHE_TIME
org.tunesremote.FadeView:
    protected static final long FADE_DELAY
    public static final long DOUBLE_TIME
org.tunesremote.FastScrollView$ScrollFade:
    static final int ALPHA_MAX
    static final long FADE_DURATION
org.tunesremote.FastScrollView$SectionIndexer:
    public abstract int getSectionForPosition(int)
org.tunesremote.LibraryActivity:
    public static final java.lang.String TOUCH_ABLE_TYPE
    public static final java.lang.String DACP_TYPE
    public static final java.lang.String REMOTE_TYPE
    public static final java.lang.String HOSTNAME
    public static final int DONE
    public static final int DELAY
org.tunesremote.R
org.tunesremote.R$anim
org.tunesremote.R$attr
org.tunesremote.R$drawable
org.tunesremote.R$id
org.tunesremote.R$layout
org.tunesremote.R$string
org.tunesremote.R$style
org.tunesremote.R$xml
org.tunesremote.SearchActivity:
    public static final int FORCE_TOP
    public static final int REMOVE_FOOTER
    public static final int NO_RESULTS_FOUND
org.tunesremote.daap.Library:
    protected static final int RESULT_INCREMENT
    143:180:public void readAlbums(org.tunesremote.TagListener)
org.tunesremote.daap.PairingServer:
    public static final int PORT
org.tunesremote.daap.RequestHelper:
    58:59:public static byte[] requestSearch(org.tunesremote.daap.Session,java.lang.String,int,int)
    69:69:public static byte[] requestTracks(org.tunesremote.daap.Session,java.lang.String)
    79:79:public static byte[] requestAlbums(org.tunesremote.daap.Session,int,int)
    89:89:public static byte[] requestPlaylists(org.tunesremote.daap.Session)
org.tunesremote.daap.Session:
    192:192:public void controlRating(long)
org.tunesremote.daap.Status:
    public static final int REPEAT_OFF
    public static final int REPEAT_SINGLE
    public static final int REPEAT_ALL
    public static final int SHUFFLE_OFF
    public static final int SHUFFLE_ON
    public static final int STATE_PAUSED
    public static final int STATE_PLAYING
    public static final int UPDATE_PROGRESS
    public static final int UPDATE_STATE
    public static final int UPDATE_TRACK
    public static final int UPDATE_COVER
    private static final int MAX_FAILURES
    351:351:public long getRating()
org.tunesremote.util.PairingDatabase:
    public static final java.lang.String DB_NAME
    public static final int DB_VERSION
    public static final java.lang.String TABLE_PAIR
    public static final java.lang.String FIELD_PAIR_ID
    public static final java.lang.String FIELD_PAIR_LIBRARY
    public static final java.lang.String FIELD_PAIR_ADDRESS
    public static final java.lang.String FIELD_PAIR_GUID
    155:161:public boolean libraryExists(java.lang.String)
org.tunesremote.util.RecentProvider:
    public static final java.lang.String AUTHORITY
    public static final int MODE
org.tunesremote.util.ThreadExecutor:
    private static final int CORE_POOL_SIZE
    private static final int MAXIMUM_POOL_SIZE
    private static final int KEEP_ALIVE
org.tunesremote.util.UserTask:
    private static final java.lang.String LOG_TAG
    private static final int CORE_POOL_SIZE
    private static final int MAXIMUM_POOL_SIZE
    private static final int KEEP_ALIVE
    private static final int MESSAGE_POST_RESULT
    private static final int MESSAGE_POST_PROGRESS
    250:250:public final org.tunesremote.util.UserTask$Status getStatus()
    303:303:public final boolean isCancelled()
    322:322:public final boolean cancel(boolean)
    335:335:public final java.lang.Object get()
    350:350:public final java.lang.Object get(long,java.util.concurrent.TimeUnit)
    396:397:protected final void publishProgress(java.lang.Object[])
